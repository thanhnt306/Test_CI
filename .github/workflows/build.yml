name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3

    
    # - name: Set PowerShell execution policy
    #   shell: cmd
    #   run: powershell -Command "Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force"

    # - name: Install Qt
    #   # Installs the Qt SDK
    #   uses: jurplel/install-qt-action@v4
    #   with:
    #     version: '6.6.3'
    #     host: 'windows'
    #     target: 'desktop'
    #     arch: 'win64_msvc2019_64'
    #     modules: qtmultimedia qtpositioning qtsensors qtwebsockets qtwebengine qtwebview qtcharts qtpdf

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake.exe -G "Ninja" -S C:/Users/thanh306/AppData/Local/actions-runner/_work/Test_CI/Test_CI -B C:/Users/thanh306/AppData/Local/actions-runner/_work/Test_CI/Test_CI/build
        -DARCGISRuntime_ARCH="x64" \
        -DARCGISRuntime_EsriCommonQt_IMPLIB="C:/Program Files/ArcGIS SDKs/Qt200.5.0/sdk/windows/x64/lib/EsriCommonQt.lib" \
        -DARCGISRuntime_EsriCommonQt_LIB="C:/Program Files/ArcGIS SDKs/Qt200.5.0/sdk/windows/x64/bin/EsriCommonQt.dll" \
        -DARCGISRuntime_EsriRuntimeQt_IMPLIB="C:/Program Files/ArcGIS SDKs/Qt200.5.0/sdk/windows/x64/lib/EsriRuntimeQt.lib" \
        -DARCGISRuntime_INCLUDE_DIR="C:/Program Files/ArcGIS SDKs/Qt200.5.0/sdk/include" \
        -DARCGISRuntime_INSTALL_DIR="C:/Program Files/ArcGIS SDKs/Qt200.5.0" \
        -DARCGISRuntime_PLATFORM_NAME="windows" \
        -DARCGISRuntime_runtimecore_LIB="C:/Program Files/ArcGIS SDKs/Qt200.5.0/sdk/windows/x64/bin/runtimecore.dll" \
        -DCMAKE_AR="C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/lib.exe" \
        -DCMAKE_BUILD_TYPE="Release" \
        -DCMAKE_COLOR_DIAGNOSTICS=ON \
        -DCMAKE_CXX_COMPILER="C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/HostX64/x64/cl.exe" \
        -DCMAKE_CXX_FLAGS="/DWIN32 /D_WINDOWS /W3 /GR /EHsc" \
        -DCMAKE_CXX_FLAGS_DEBUG="/MDd /Zi /Ob0 /Od /RTC1" \
        -DCMAKE_CXX_FLAGS_INIT="" \
        -DCMAKE_CXX_FLAGS_MINSIZEREL="/MD /O1 /Ob1 /DNDEBUG" \
        -DCMAKE_CXX_FLAGS_RELEASE="/MD /O2 /Ob2 /DNDEBUG" \
        -DCMAKE_CXX_FLAGS_RELWITHDEBINFO="/MD /Zi /O2 /Ob1 /DNDEBUG" \
        -DCMAKE_CXX_OUTPUT_EXTENSION=".obj" \
        -DCMAKE_CXX_STANDARD_LIBRARIES="kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib" \
        -DCMAKE_C_COMPILER="C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/HostX64/x64/cl.exe" \
        -DCMAKE_C_OUTPUT_EXTENSION="" \
        -DCMAKE_EXE_LINKER_FLAGS="/machine:x64" \
        -DCMAKE_EXE_LINKER_FLAGS_DEBUG="/debug /INCREMENTAL" \
        -DCMAKE_EXE_LINKER_FLAGS_MINSIZEREL="/INCREMENTAL:NO" \
        -DCMAKE_EXE_LINKER_FLAGS_RELEASE="/INCREMENTAL:NO" \
        -DCMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO="/debug /INCREMENTAL" \
        -DCMAKE_EXPORT_COMPILE_COMMANDS=OFF \
        -DCMAKE_GENERATOR="Ninja" \
        -DCMAKE_INSTALL_BINDIR="bin" \
        -DCMAKE_INSTALL_DATADIR="" \
        -DCMAKE_INSTALL_DATAROOTDIR="share" \
        -DCMAKE_INSTALL_DOCDIR="" \
        -DCMAKE_INSTALL_INCLUDEDIR="include" \
        -DCMAKE_INSTALL_INFODIR="" \
        -DCMAKE_INSTALL_LIBDIR="lib" \
        -DCMAKE_INSTALL_LIBEXECDIR="libexec" \
        -DCMAKE_INSTALL_LOCALEDIR="" \
        -DCMAKE_INSTALL_LOCALSTATEDIR="var" \
        -DCMAKE_INSTALL_MANDIR="" \
        -DCMAKE_INSTALL_OLDINCLUDEDIR="/usr/include" \
        -DCMAKE_INSTALL_PREFIX="C:/Program Files (x86)/Test_CI" \
        -DCMAKE_INSTALL_RUNSTATEDIR="" \
        -DCMAKE_INSTALL_SBINDIR="sbin" \
        -DCMAKE_INSTALL_SHAREDSTATEDIR="com" \
        -DCMAKE_INSTALL_SYSCONFDIR="etc" \
        -DCMAKE_LINKER="C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/link.exe" \
        -DCMAKE_MAKE_PROGRAM="C:/PROGRA~2/MICROS~2/2019/COMMUN~1/Common7/IDE/COMMON~1/MICROS~1/CMake/Ninja/ninja.exe" \
        -DCMAKE_MODULE_LINKER_FLAGS="/machine:x64" \
        -DCMAKE_MODULE_LINKER_FLAGS_DEBUG="/debug /INCREMENTAL" \
        -DCMAKE_MODULE_LINKER_FLAGS_MINSIZEREL="/INCREMENTAL:NO" \
        -DCMAKE_MODULE_LINKER_FLAGS_RELEASE="/INCREMENTAL:NO" \
        -DCMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO="/debug /INCREMENTAL" \
        -DCMAKE_MT="C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0/x64/mt.exe" \
        -DCMAKE_PREFIX_PATH="C:/Qt/6.6.3/msvc2019_64" \
        -DCMAKE_PROJECT_INCLUDE_BEFORE="C:/Users/thanh306/Projects/Test_CI/build/Desktop_Qt_6_6_3_MSVC2019_64bit-Release/.qtc/package-manager/auto-setup.cmake" \
        -DCMAKE_RC_COMPILER="C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0/x64/rc.exe" \
        -DCMAKE_RC_FLAGS="-DWIN32" \
        -DCMAKE_RC_FLAGS_DEBUG="-D_DEBUG" \
        -DCMAKE_RC_FLAGS_MINSIZEREL="" \
        -DCMAKE_RC_FLAGS_RELEASE="" \
        -DCMAKE_RC_FLAGS_RELWITHDEBINFO="" \
        -DCMAKE_SHARED_LINKER_FLAGS="/machine:x64" \
        -DCMAKE_SHARED_LINKER_FLAGS_DEBUG="/debug /INCREMENTAL" \
        -DCMAKE_SHARED_LINKER_FLAGS_MINSIZEREL="/INCREMENTAL:NO" \
        -DCMAKE_SHARED_LINKER_FLAGS_RELEASE="/INCREMENTAL:NO" \
        -DCMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO="/debug /INCREMENTAL" \
        -DCMAKE_SKIP_INSTALL_RPATH=OFF \
        -DCMAKE_SKIP_RPATH=OFF \
        -DCMAKE_STATIC_LINKER_FLAGS="/machine:x64" \
        -DCMAKE_STATIC_LINKER_FLAGS_DEBUG="" \
        -DCMAKE_STATIC_LINKER_FLAGS_MINSIZEREL="" \
        -DCMAKE_STATIC_LINKER_FLAGS_RELEASE="" \
        -DCMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO="" \
        -DCMAKE_VERBOSE_MAKEFILE=OFF \
        -DQT_ADDITIONAL_HOST_PACKAGES_PREFIX_PATH="" \
        -DQT_ADDITIONAL_PACKAGES_PREFIX_PATH="" \
        -DQT_CREATOR_SKIP_PACKAGE_MANAGER_SETUP=OFF \
        -DQT_CREATOR_SOURCE_GROUPS=ON \
        -DQT_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6" \
        -DQT_QMAKE_EXECUTABLE="C:/Qt/6.6.3/msvc2019_64/bin/qmake.exe" \
        -DQt6CoreTools_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6CoreTools" \
        -DQt6Core_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6Core" \
        -DQt6EntryPointPrivate_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6EntryPointPrivate" \
        -DQt6GuiTools_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6GuiTools" \
        -DQt6Gui_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6Gui" \
        -DQt6Multimedia_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6Multimedia" \
        -DQt6Network_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6Network" \
        -DQt6OpenGL_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6OpenGL" \
        -DQt6Positioning_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6Positioning" \
        -DQt6QmlCompilerPlusPrivate_DIR="Qt6QmlCompilerPlusPrivate_DIR-NOTFOUND" \
        -DQt6QmlIntegration_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6QmlIntegration" \
        -DQt6QmlModels_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6QmlModels" \
        -DQt6QmlTools_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6QmlTools" \
        -DQt6Qml_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6Qml" \
        -DQt6Quick_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6Quick" \
        -DQt6Sensors_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6Sensors" \
        -DQt6WebSockets_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6WebSockets" \
        -DQt6ZlibPrivate_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6ZlibPrivate" \
        -DQt6_DIR="C:/Qt/6.6.3/msvc2019_64/lib/cmake/Qt6" \
        -DVER_MAJ_MIN="200.5.0"

    # - name: Build with Qt environment
    #   shell: cmd
    #   run: |
    #     call "C:\Qt\6.6.3\msvc2019_64\bin\qtenv2.bat"
    #     call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\VsDevCmd.bat" -arch=x64
    #     call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" x64

    - name: Build
      # Build your program with the given configuration
      run: |
        "C:\Qt\6.6.3\msvc2019_64\bin\qtenv2.bat"
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" x64
        cmake.exe --build C:/Users/thanh306/AppData/Local/actions-runner/_work/Test_CI/Test_CI/build --target all

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
