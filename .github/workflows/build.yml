name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3

    
    # - name: Set PowerShell execution policy
    #   shell: cmd
    #   run: powershell -Command "Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force"

    # - name: Install Qt
    #   # Installs the Qt SDK
    #   uses: jurplel/install-qt-action@v4
    #   with:
    #     version: '6.6.3'
    #     host: 'windows'
    #     target: 'desktop'
    #     arch: 'win64_msvc2019_64'
    #     modules: qtmultimedia qtpositioning qtsensors qtwebsockets qtwebengine qtwebview qtcharts qtpdf

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      shell: cmd
      run: |
        call "C:\Qt\6.6.3\msvc2019_64\bin\qtenv2.bat"
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\VsDevCmd.bat" -arch=x64
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" x64
        cmake.exe -G "Ninja" -S C:/Users/thanh306/AppData/Local/actions-runner/_work/Test_CI/Test_CI -B C:/Users/thanh306/AppData/Local/actions-runner/_work/Test_CI/Test_CI/build -DCMAKE_PREFIX_PATH=C:/Qt/6.6.3/msvc2019_64

    # - name: Build with Qt environment
    #   shell: cmd
    #   run: |
    #     call "C:\Qt\6.6.3\msvc2019_64\bin\qtenv2.bat"
    #     call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\VsDevCmd.bat" -arch=x64
    #     call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" x64

    - name: Build
      # Build your program with the given configuration
      shell: cmd
      run: |
        call "C:\Qt\6.6.3\msvc2019_64\bin\qtenv2.bat"
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\VsDevCmd.bat" -arch=x64
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" x64
        cmake.exe --build C:/Users/thanh306/AppData/Local/actions-runner/_work/Test_CI/Test_CI/build --target all

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
